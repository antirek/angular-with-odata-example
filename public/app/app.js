// Generated by CoffeeScript 1.8.0
(function() {
  var app;

  app = angular.module('odata', ['ngResource', 'ngRoute', 'codefabriek.odata', 'ngTouch', 'ui.grid', 'ui.grid.pagination']);

  app.config([
    '$httpProvider', '$odataProvider', function($httpProvider, $odataProvider) {
      $odataProvider.routePrefix('/odata/');
      return $httpProvider.interceptors.push('odataInterceptor');
    }
  ]);

  app.config([
    '$routeProvider', function($routeProvider) {
      return $routeProvider.when('/list', {
        templateUrl: '/partials/number_list',
        controller: 'NumberListController'
      }).when('/list2', {
        templateUrl: 'partials/number_list2',
        controller: 'NumberList2Controller'
      }).when('/create', {
        templateUrl: '/partials/number_create',
        controller: 'NumberCreateController'
      }).when('/view/:numberId', {
        templateUrl: '/partials/number_view',
        controller: 'NumberViewController'
      }).otherwise({
        redirectTo: '/list'
      });
    }
  ]);

  app.factory('Number', [
    '$resource', function($resource) {
      return $resource('/odata/numbers/:id', {
        id: '@_id'
      }, {
        query: {
          method: 'GET',
          isArray: false,
          headers: {
            Accept: "application/json; odata=verbose"
          }
        }
      });
    }
  ]);

  app.controller('NumberListController', [
    'Number', '$scope', function(Number, $scope) {
      var refreshNumbers;
      $scope.numbers = [];
      refreshNumbers = function() {
        return Number.query({
          $select: 'id,title,number'
        }, function(response) {
          return $scope.numbers = response.value;
        });
      };
      refreshNumbers();
      return $scope["delete"] = function(index) {
        return Number["delete"]({
          id: $scope.numbers[index].id
        }, function() {
          return refreshNumbers();
        });
      };
    }
  ]);

  app.controller('NumberList2Controller', [
    'Number', '$scope', function(Number, $scope) {
      var refreshNumbers;
      $scope.numbers = [];
      $scope.gridOptions = {
        paginationPageSize: 2,
        columnDefs: [
          {
            name: 'Название',
            field: 'title'
          }, {
            name: 'Номер',
            field: 'number'
          }, {
            name: '#',
            field: 'id',
            cellTemplate: '<a class="btn btn-default" href="#/view/{{COL_FIELD}}">Просмотр</a>'
          }, {
            name: '%',
            field: 'id',
            cellTemplate: '<a class="btn btn-danger">Удалить</a>'
          }
        ]
      };
      refreshNumbers = function() {
        return Number.query({
          $select: 'id,title,number'
        }, function(response) {
          $scope.numbers = response.value;
          return $scope.gridOptions.data = response.value;
        });
      };
      return refreshNumbers();
    }
  ]);

  app.controller('NumberCreateController', [
    'Number', '$location', '$scope', function(Number, $location, $scope) {
      $scope.number = new Number();
      return $scope.save = function() {
        return $scope.number.$save(function() {
          return $location.path('/list');
        });
      };
    }
  ]);

  app.controller('NumberViewController', [
    'Number', '$scope', '$routeParams', function(Number, $scope, $routeParams) {
      return $scope.number = Number.get({
        id: $routeParams.numberId
      });
    }
  ]);

}).call(this);

//# sourceMappingURL=app.js.map
